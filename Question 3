
import java.util.Arrays;
import java.util.Scanner;

public class ArrayStatistics {
    public static void main(String[] args) {
        // Create a scanner for user input
        Scanner scanner = new Scanner(System.in);

        // Prompt user for the size of the array
        System.out.print("Enter the number of elements in the array: ");
        int size = scanner.nextInt();

        // Handle case for empty array
        if (size <= 0) {
            System.out.println("Array size must be greater than zero.");
            return; // Exit the program
        }

        // Initialize the array
        int[] array = new int[size];

        // Prompt user to enter the array elements
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();
        }

        // Calculate mean
        double mean = calculateMean(array);
        System.out.println("Mean: " + mean);

        // Calculate median
        double median = calculateMedian(array);
        System.out.println("Median: " + median);

        // Calculate standard deviation
        double stdDev = calculateStandardDeviation(array, mean);
        System.out.println("Standard Deviation: " + stdDev);
    }

    // Method to calculate mean
    public static double calculateMean(int[] array) {
        int sum = 0; // Initialize sum to 0
        for (int num : array) {
            sum += num; // Add each number to the sum
        }
        return (double) sum / array.length; // Return the mean
    }

    // Method to calculate median
    public static double calculateMedian(int[] array) {
        Arrays.sort(array); // Sort the array to find the median
        int n = array.length; // Get the number of elements in the array
        if (n % 2 == 0) {
            // If even, return the average of the two middle numbers
            return (array[n / 2 - 1] + array[n / 2]) / 2.0;
        } else {
            // If odd, return the middle number
            return array[n / 2];
        }
    }

    // Method to calculate standard deviation
    public static double calculateStandardDeviation(int[] array, double mean) {
        double sumSquaredDifferences = 0; // Initialize sum of squared differences to 0
        for (int num : array) {
            sumSquaredDifferences += Math.pow(num - mean, 2); // Add squared difference from the mean
        }
        return Math.sqrt(sumSquaredDifferences / array.length); // Return the standard deviation
    }
}
